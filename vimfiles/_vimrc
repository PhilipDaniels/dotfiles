" To reload this file while editing it use :so % (source current file)
" runtime _vimrc.tkeys  REPLACED by the fix-keys script.
runtime _vimrc.vkeys
runtime _vimrc.functions
runtime _vimrc.programming

set nocompatible    " Don't care about being compatible with vi.
set number          " Turn on line numbers
set vb t_vb=        " Turn off bleeping and flashing
set complete-=i     " Don't scan included files when completing (it's too slow)

" Ensure tabs are always 4 spaces.
set tabstop=4
set shiftwidth=4
set expandtab

" Turn off backups
set nobackup
set nowb
set noswapfile

" Set a status line.
set noruler
set laststatus=2
set statusline=
set statusline+=%-3.3n\                      " buffer number
set statusline+=%f\                          " file name
set statusline+=%{FileSizeForStatusLine()}\,  " file size
set statusline+=%L\ Lines\ 
set statusline+=%h%m%r%w                     " flags
set statusline+=[%{strlen(&ft)?&ft:'none'},  " filetype
set statusline+=%{strlen(&fenc)?&fenc:&enc}, " encoding
set statusline+=%{&fileformat}]\             " file format
set statusline+=%=                           " right align
"set statusline+=%{synIDattr(synID(line('.'),col('.'),1),'name')}\  " highlight
set statusline+=%b,0x%-8B\                   " current char
set statusline+=L%l,C%c\ [%P]\ 
set statusline+=%{strftime('%H:%M')}         " Time in 24 hour format.
"set titlestring=%f\ %{FileSizeForStatusLine()}

" Turn on syntax highlighting and indentation based on filetype.
syntax on
filetype plugin indent on

" And ensure markdown files are edited as such, not Modula-2.
au BufRead,BufNewFile *.md set filetype=markdown

" Enable visual line wrapping. nowrap turns this off.
set nowrap

" Turn off the automatic insertion of new lines.
set textwidth=0 wrapmargin=0

" ...and really stay off, sometimes I want to break the rules.
au BufRead,BufNewFile * set textwidth=0 wrapmargin=0

au! BufEnter *.cpp let b:fswitchdst = 'hpp,h' | let b:fswitchlocs = '.'
au! BufEnter *.hpp let b:fswitchdst = 'cpp' | let b:fswitchlocs = '.'
au! BufEnter *.h let b:fswitchdst = 'c,cpp' | let b:fswitchlocs = '.'

" When Ctrl-P starts, run in mixed mode by default (searches files, buffers
" and MRU lists) and bind to the key M-p. You need to restart Vim if you
" change either of these settings, sourcing this file is not enough.
let g:ctrlp_map = '<M-p>'
let g:ctrlp_cmd = 'CtrlPMixed'

" Ignore these things when searching for matches. This is from the help.
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\.git$\|\.hg$\|\.svn$',
    \ 'file': '\.exe$\|\.so$\|\.dll$|\.o$'
    \ }

" Turn on automatic indentation. The Wiki says only do this manually if
" filetype indentation is not working.
"set smartindent

" Backspace and cursor keys wrap to previous/next line and make
" Backspace work correctly.
set backspace=indent,eol,start whichwrap+=<,>,[,]

" Backspace in Visual mode deletes selection
vnoremap <BS> d

" List of files to ignore in NERDTree.
let NERDTreeIgnore=['.o$[[file]]', '.exe$[[file]]']

" Seem to have to do this last for some reason...
runtime _vimrc.theming

