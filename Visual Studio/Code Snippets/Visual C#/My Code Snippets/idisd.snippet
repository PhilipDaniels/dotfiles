<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>idisd</Title>
			<Shortcut>idisd</Shortcut>
			<Description>IDisposable Implementation (for derived classes)</Description>
			<Author>Philip Daniels</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
      <Declarations>
        <Literal Editable="false">
          <ID>classname</ID>
          <ToolTip>Class name</ToolTip>
          <Function>ClassName()</Function>
          <Default>ClassNamePlaceholder</Default>
        </Literal>
      </Declarations>
			<Code Language="csharp">
		<![CDATA[#region IDisposable Implementation (for derived classes)
    // All you have to do is override the virtual Dispose method.
    // Note that the derived class does not inherit ( : IDisposable )
    // the IDisposable interface itself, the base class does it.
    private void NonDisposableCleanup() {
    }

    protected override void Dispose(bool disposing) {
        if (m_Disposed) return;

        if (disposing) {
            // TODO Repeat for all owned managed objects that implement IDisposable.
            //SafeDisposeObject(ref m_OwnedObject);
        }

        NonDisposableCleanup();
        base.Dispose(disposing); 
        m_Disposed = true;
    }
    #endregion$end$]]>
		</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>